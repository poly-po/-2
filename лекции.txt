Тезисы первой лекции:
1) ООП = абстракция + полиморфизм + наследование + инкапсуляция, но это
скорее принципы, чем механизмы. 
2) Полиморфизм - способность программы выбирать различные реализации,
при вызове операций с одним и тем же названием. Полиморфизм = наследование + виртуальные функции.

Тезисы ко второй лекции:
1)Конфликты слияния:
- Возникают, когда одни и те же части файла были изменены в сливаемых ветках.
- Git не может автоматически решить конфликт, требуется ручное вмешательство.
- Для разрешения нужно редактировать файл, выбрав подходящие изменения, и затем выполнить commit.
2)Gitflow:
- Это модель ветвления для Git.
- Определяет строгие правила для именования и использования веток.
- Основные ветки:
  - master - стабильная версия.
  - develop - текущая разработка.
  - feature - новые возможности.
  - release - подготовка к релизу.
  - hotfix - срочные исправления.
- Позволяет эффективно управлять жизненным циклом проекта.
